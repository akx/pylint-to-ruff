import json
import os
import re
import subprocess
from collections.abc import Iterable

implemented_rule_re = re.compile(
    # fmt: off
    r"^- \[x\] "
    r"`(?P<name>.+?)` / "
    r"`(?P<code>.+?)`"
    r"\s*"
    r"(?:\((?P<aliases>.+)\))?",
    # fmt: on
)


def get_ruff_issue_970_body():
    if not os.path.isfile("issue-970.json"):
        subprocess.check_call(
            [
                "curl",
                "-fL",
                "https://api.github.com/repos/astral-sh/ruff/issues/970",
                "-o",
                "issue-970.json",
            ],
        )

    with open("issue-970.json") as f:
        content = json.load(f)["body"]
    return content


def parse_issue_body(content) -> Iterable[str, set[str]]:
    for line in content.splitlines():
        if m := implemented_rule_re.match(line):
            code = m.group("code")
            aliases = {c.strip() for c in (m.group("aliases") or "").replace("`", "").split(",") if c}
            if aliases == {f"PL{code}"}:  # not an alias really
                continue
            if not aliases:
                continue
            yield (code, aliases)


def main():
    content = get_ruff_issue_970_body()
    with open("pylint_to_ruff/ruff_aliases.py", "w") as f:
        print("# This file is auto-generated by update_ruff_aliases.py", file=f)
        print("RUFF_ALIASES = {", file=f)

        for code, aliases in sorted(parse_issue_body(content)):
            print(f"    {code!r}: {aliases!r},", file=f)
        print("}", file=f)
    print(f"Updated {f.name}")


if __name__ == "__main__":
    main()
